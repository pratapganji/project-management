Posted and identified, right? Okay, that is called as a target server URL, okay, okay. Now that is VIP. Now what happened? No, that is not VIP. That is target server URL, yes, okay, so understand in this way when you have too many APIs, right, or too many servers right at the back end, so each server will have its own URL.

Do you agree to this? Yes, so assume, assume like this, right? Dev has three dev servers, okay, so that means on three all three of them, you will deploy your API, and all three URLs will be different. Target URLs will be different, yes, target server URL. When I say target server, you are that means host name has the server name in that that is the reason it is different. Okay, okay. Now, cut to now. Let’s take a scenario of production. So production has three broad, three cob servers. Now in this case, we will have six URLs, target URLs, right? Yes, now today, and you understand why we have cob and why we have broad, right? Why we have the provision of two servers which are on the same level. So broad, prod type, two different set of servers. We have cob is nothing but a continuity of business, right? Full Form of it is continuity of business, which means, in case, by any chance, broad goes down, then you have cob to continue the business. Yes. Yes, okay, that is the intent behind it. Now, when you have three, three servers each, right? How you will put a generic URL on top of its generic host on top of it? Moreover, you have to cater the fallback scenarios, right? That means how fault tolerant are the things at your end, right? So you need to have some gateway to it, right? Yes. So what you do is, first thing is you create one VIP on top of all the three cop servers, okay, which is called as virtual IP. Okay. Again, you create another virtual IP, combining all three servers of fraud. Okay, so now let’s say XYZ prod becomes first VIP, XYZ cop becomes a second, second, gate, VIP. Now how this VIP works, right? So VIP is nothing but a gateway, API, Gateway kind of thing, right? Yeah, when you hit a gateway, what it does is whatever algorithm you have configured, whether it is round robin or it is, it is any other algorithm which is being configured according to that request, move to all three servers, agreed. Yes, right. So that is catered in VIP.

Okay, that is one, okay. So how the request will flow into three servers, right? It could be because of the load you can do it because you wanted to do it in Round Robin. Way. You can do it with n number of situations, right? It depends upon team to team. You use case to use case, right? Load balance, yeah, okay. Load Balancer, kind of thing, correct? Gateway. Does the load balancing for us, right? Yeah. So understand, in this way, for the CRM case, we have a load so that is the reason in this. When we create a VIP, we have put it as round robin way, so which will always distribute in all on all the three servers equally. Okay, okay, yes. Now, this is one now, now the question arises. We have two VIPs, right? Still, we have a problem, right? So now we created W IP, okay, which we called as wide IP, okay, for these that divide IP is on top these two, yes, which is a generic one, which is something like XYZ. Okay, that’s it. Okay. Now, what happens is, when you are now this WIP becomes a generic and this becomes as a gateway. So whenever requests come to W IP, it first go in the round robin, way to both the VIPs, VIPs, then inside the VIP, it goes into further round robin, into 33 server each. Yes, okay. Now, by this way, it is round robin in six servers somewhere. Yes, totally, yeah. Okay, you got it. Okay. So now what we do is we create this w i b, then we attach this W IP URL to API G, okay, now API G act as a authentication authorization layer for us. So now consumer hit our API G URL underneath that we have W IP URL, okay, and then it gets distributed. You got this point clear? Yes, I got.

Now the point number two is that once you have the scenario in place, that is first, then how you manage this. Today’s scenario is our target server. URL are all on HTTP for CRM Yes, which means VIP will be HTTP, WIP would be HTTP. And indirectly that HTTP would be tagged to API G, yes, and but API G URL is HTTPS, yes, yes, HTTP. But what happens is API GE team continuously get the alert at their end because the the underlying W IP is HTTP. Okay, so we need to get rid of that, and we have to fundamentally make a change from bottom up server URLs that is target server URLs need to be changed to entity HTTPS. Then we need to edit the current VIP, then we have to edit the W IP, then we have to do the Apigee thing. Okay, okay, so today you have done the target server URL of Dev, and then you were trying to do it for UAT, but you need to change VIP and W IP, otherwise VIP and W IP will fail today. Today, if you see in dev, W IP would be failing or VIP would be failing. The pure reason is you have changed to HTTPS, okay, right, yes. So now these, this application is live from past two years, okay? And we have a load every hour. We are almost getting 10,000 to one lakh records every every hour, minimum. Okay, so now the question arises, w 80 is still fine, because the load is main coming in production, how we will mitigate this? That is the reason we were going with ECS. ECS itself changes to HTTPS. Moreover, that is a better strategic solution. That is why we were going towards that. But somehow Anand doesn’t have capacity, and we have that issue, so we are not able to get that ECS cluster for now, I am talking to, I have to talk to Kumar, which I talked, which I will talk to him on Monday again about the CRM thing. And then we will float an email so that they can discuss with the with the Shan and right set of folks to get this available for us. Okay, okay, so in the meanwhile, what we are trying to do is whatever is deployed in our VM servers, right for which I have given you the example for to explain you with the IP, W, IP, this is the current setup which is there right now, yeah, okay, so we have to find out a plan so you have a solution where you can make your targets available to HTTPS. Now question arises, how to do this activity in production, where this everything is live, we have a downtime on Saturday, Saturday evening around, I guess seven or just assume, like evening to Sunday evening for 24 hours, almost right, or 16 hours, we have a downtime that is called as green zone time. During that time, we can do this activity very well. But the catch over here is if you want, if you will deploy the changes during the same time right in production. Assume that right, okay, you will first deploy the server URLs. Right for that you need to do to the API deployment. You do the API deployment, you change the server URL from HTTP to HTTPS. Then you have to immediately make a change in VIP through the portal. Then immediately you have to make the change in W, i, p, then immediately you have to make the change in API, GE. These are the concurrent things to be done again on the live environment you are doing that, and after 24 hours, immediately it will be on. And if something is wrong in this complete step, you will be in a problem because you have to revert back, and you don’t have any mechanism to revert it back, even because if you make the change in the existing it will you don’t have a mechanism to go back, right? So my take over here is you create that server URL, target server URL, and you should have VIP WIP also set up. Okay, for that, okay, yes, in advance, so once we have VIP w i P set up separately, right? So for existing, whatever. Sorry, you’re quiet for WIP and VIP. We have any, any portal to log in and configure this. This HTTPS, yes, we have VIP W IP portal, which is called as CAS portal. You can talk to the page. He can give you the download of it. He has recently created in Devon Rupesh. You can talk to him. He’s from our team, only API team. He’s working on scientific project. Okay.

Now, point number two, my take over here is right? If you deploy any code, right, it will break your existing thing. In that case, what you should do is, and that should be the easiest way, which I feel right now, let’s create another let’s do another deployment in production itself, a new API deployment for CRM, a replica of existing, okay, okay, okay, that would no one will be using it. We will deploy that, create VIP, W, i, p, right, everything, all, okay, okay, okay. And then we will what we will do is we will try to switch existing API GE to the new, new W, i, p, URL, okay, okay, and now fall back. Way would be, in case API GE doesn’t work, we will revert it back to the old world. One that will require that is the rollback of the API GE script, okay, in that scenario. So this is how I am thinking of working on this, so that we have a minimal impact and we have very less issues in that terms. Yes, it is not. This is this is the arrangement where whatever sooner fixes test cases and all the things you are doing is not happening in this scenario, whatever is there existing, which is in production today, we will deploy as it is same, a replica of it, by changing the name. Yes, that’s it, right? Yeah, the one which we are talking about easiest, right thing that is a separate, I would say, repo and pipeline, which we have to create to do that, yes, but unless we get the space and pipeline, we cannot do that. Can continue, yeah, till then we can continue with the VM, because we have a cap and we have a tight and set deadlines. By November 1 week we have to be in, we have to be in UAT, and all the consumers should be in UAT, okay, but we don’t want to go with production till that time. You don’t require that much time. You can just take, take two weeks and complete all these things in Devon UAT, and then we can go to production directly. Okay, without changes, without any changes, whatever is there currently, just the change in the name of the API, right? And then we’ll deploy everything as a separate package completely, okay? And then switch it over in production. Okay? Right? Right? And in the meanwhile, right? We will do a testing, one round of testing in UAT with the users. We’ll talk to the users. We’ll ask them, this is the change we have done in the API GE, can you check if you are able to hit and get the response? If they say, Yes, good. That is a test for us. That is the main pain point over here.

Do we have any test cases for CRM API? No, just no test cases are being written. I mean, postman collection or something. Yeah, postman collection, I guess. No, we don’t have postman collection. We have a client which we have a client which we have created as a code which we hit and do that, we test our APIs. So Sachin can give you the download of that, right? That client, because this is protobuf thing, right? So you need to structure your data, structure your request, in such a way that it is a protobuf message that cannot be done in soap UI or postman. You need to do using a code which we call it as as client. We run it in our local and hit the necessary endpoints in order to test okay. Sachin is aware about it. SACHIN can give you the download. Sachin give that download to him so that he can test all these things and any anything which you have a suggestion, right? Sachin, because you have gone through it. And another download which you can take from Sachin is, right? We had a migration from API M, which is an IBM product, to Apigee today. And it took us, really more than two months, three months, when we were, after all our consumers, to make that change. But this. Time, what I am doing is I’m not changing the API G URL. I’m keeping the API G URL same. I’m doing changing the underneath, W, I P itself, right? That will not impact them, but you need to test with them in UAT that are, can they hit a sample data, and are you able to get the are those records being processed and put it on the Kafka or not? That test need to be done, because by making from HTTP to HTTPS, I hope it should not create any problem for the consumer, and it starts giving error that we can also test we can become as a consumer, right? And our client will hit to our API, GE, UAT, URL, right, and see, is it working or not that we can test very well in development as well as in UAT, very well? Yes, okay, yeah, so that is the idea about it. Sachin, go ahead, you were saying something.

No. Hmm, no, no good. I will connect with Pratap on that standalone API, which where we were testing correct so please do mention him about all right and try that help him to do all the due diligence which is required to be done, right, in order to deploy things in Devon UAT as a separate project. Right? Again, that is a challenge we have right start working towards that, because this is a different route altogether from ECS. Okay, Pratap and Sachin, this is a different route. There is not an ECS route, which we are talking about today. This is on the VM servers creating a replica of existing one. Okay, so start looking into it, analyze it, and come up with the questions, right? And start working towards that. Pratap, okay, okay, so today you can do that exercise. Keep set up a meeting on Monday with me. We will discuss on this in detail, right? If you have any questions further right. Sachin, you can give that download to him. And Pratap, you can take the idea about it and then start on this piece. Okay, okay, yeah, anything else guys, Sachin, anything from your end, for CRM or like, anything.

So have you replied to Rohit? Oh, yeah, sorry, please. Can you do that please first, yeah, let him continue on the TV. And did we get any response from Aparna on the subscription thing? No, no, I did not see any response on top of memory, okay, can you follow up with Aparna on that? Yeah, okay, and please ask Rohit to start his testing. Yeah, okay, fine. Thank you guys. Thank you so much. Thank you.